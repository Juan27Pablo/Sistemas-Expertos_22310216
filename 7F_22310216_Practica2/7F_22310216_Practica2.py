import json
import os

# Archivo donde se guardarÃ¡ el conocimiento
DB_FILE = "knowledge.json"

# Conocimiento base inicial (simulaciÃ³n de entrevista de trabajo)
default_knowledge = {
   "hola": "Â¡Hola! Â¿CÃ³mo estÃ¡s?",
    "como estas": "Muy bien, gracias. Â¿Y tÃº?",
    "de que te gustaria hablar": "Podemos hablar de tecnologÃ­a, mÃºsica o lo que tÃº quieras."
}

# FunciÃ³n para cargar la base de conocimiento
def load_knowledge():
    if os.path.exists(DB_FILE):
        with open(DB_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    else:
        return default_knowledge.copy()

# FunciÃ³n para guardar el conocimiento
def save_knowledge(knowledge):
    with open(DB_FILE, "w", encoding="utf-8") as f:
        json.dump(knowledge, f, indent=4, ensure_ascii=False)

# FunciÃ³n principal del chat
def chat():
    print("Chatbot de Entrevista iniciado. Escribe 'salir' para terminar.")
    knowledge = load_knowledge()

    while True:
        user_input = input("TÃº: ").strip().lower()
        if user_input == "salir":
            print("Chatbot: Â¡Hasta pronto y mucho Ã©xito en tu entrevista!")
            break

        # Buscar respuesta en la base de conocimiento
        if user_input in knowledge:
            print("Chatbot:", knowledge[user_input])
        else:
            print("Chatbot: No sÃ© cÃ³mo responder a eso...")
            new_response = input("ğŸ‘‰ Â¿QuÃ© deberÃ­a responder a esa frase?: ")
            knowledge[user_input] = new_response
            save_knowledge(knowledge)
            print("Chatbot: Â¡Gracias! He aprendido algo nuevo.")

# Ejecutar el chatbot
if __name__ == "__main__":
    chat()
